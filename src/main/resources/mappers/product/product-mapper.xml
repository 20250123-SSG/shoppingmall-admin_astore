<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aplestore.dao.ProductMapper">
    <!-- 모델저장여부확인 및 model_id 반환-->
    <select id="selectModelIdIfExists" parameterType="string" resultType="java.lang.Integer">
        SELECT
            id
        FROM
            models
        WHERE
            model_name = #{modelName}
    </select>

    <!-- 기존에 저장되지 않은 상품에 대해 insert 해주기-->
    <insert id="insertModel" parameterType="ProductModelOptionDTO" useGeneratedKeys="true" keyProperty="id">
        insert INTO models(
             product_id
           , model_name
           , model_description
           , model_price
        )
        values(
             (Select id FROM products WHERE product_name = #{productName})
            , #{modelName}
            , #{modelDescription}
            , #{modelPrice}
        )
    </insert>

    <select id="countExistsModel" parameterType="ProductModelOptionDTO">
        SELECT
            COUNT(*)
        FROM
            model_options
        WHERE model_id = (SELECT id FROM models WHERE model_name = #{modelName})
            AND color = #{color}
            AND ram = #{ram}
            AND size = #{size}
            AND optional_model_price = #{optionalModelPrice}

    </select>

    <!-- 상품등록 -->
    <insert id="insertProduct">
        INSERT INTO model_options
        (
          model_id
        , color
        , ram
        , size
        , optional_model_price
        , created_at
        , modified_at
        )
        VALUES
            (
            (SELECT id FROM models WHERE model_name = #{modelName})
            , #{color}
            , #{ram}
            , #{size}
            , #{optionalModelPrice}
            , NOW()
            , NOW()
            )
    </insert>

<!--    <select id="selectModelByOption" parameterType="ProductModelOptionDTO" resultType="ProductModelOptionDTO">-->
<!--        SELECT-->
<!--            -->
<!--        FROM-->
<!--            -->
<!--    </select>-->

    <!-- 상품수정 -->
    <update id="updateProduct">
        UPDATE
            model_options
        SET
            (
                model_id = (SELECT id FROM models WHERE name = #{modelName}
                    , color = #{color}
                    , ram = #{ram}
                    , size = #{size}
                    , optional_model_price = #{optionalModelPrice}
                    , modify_date = NOW()
                    )
    </update>

  <select id="getAllModels" resultType="ProductModelDTO">
    SELECT
    p.product_name AS productName,
    m.model_name AS modelName,
    m.model_price AS modelPrice,
    mo.created_at AS createdAt,
    mo.modified_at AS modifiedAt
    FROM models m
    INNER JOIN products p ON m.product_id = p.id
    INNER JOIN model_options mo ON m.id = mo.model_id

  <where>
      <if test="keyword != null and keyword != ''">
        (
        product_name LIKE CONCAT('%', #{keyword}, '%')
        OR model_name LIKE CONCAT('%', #{keyword}, '%')
        )
      </if>
    </where>

    <choose>
      <when test="sort == 'model'">
        ORDER BY model_name ASC
      </when>
      <when test="sort == 'price_asc'">
        ORDER BY model_price ASC
      </when>
      <when test="sort == 'price_desc'">
        ORDER BY model_price DESC
      </when>
      <otherwise>
        ORDER BY mo.created_at DESC
      </otherwise>
    </choose>

    LIMIT #{limit} OFFSET #{offset}
  </select>

  <select id="countAllModels" resultType="int">
    SELECT COUNT(*)
    FROM models m
    INNER JOIN products p ON m.id = p.id
    INNER JOIN model_options mo ON m.id = mo.model_id

    <where>
      <if test="keyword != null and keyword != ''">
        (product_name LIKE CONCAT('%', #{keyword}, '%')
        OR model_name LIKE CONCAT('%', #{keyword}, '%'))
      </if>
    </where>
  </select>

  <select id="findMatchingModelNames" resultType="string">
    SELECT DISTINCT model_name
    FROM models
    WHERE model_name LIKE #{keyword}
    ORDER BY model_name DESC
    LIMIT 5;
  </select>

</mapper>





